const axios = require("axios");
const { httpLog } = require("./format-log");
const OAAS_TOKEN = process.env.OAAS_TOKEN;
const API_GATEWAY = process.env.API_GATEWAY;

const OAAS_TOKEN_HEADER = { token: OAAS_TOKEN };

const EXCEPTION_STATUS = 777;

//When the request completely fails
const ECONNREFUSED_RESPONSE = (msg) => {
  return {
    status: EXCEPTION_STATUS,
    data: { successful: false, message: msg, data: {} },
  };
};

const requestTypes = {
  get: { do: axios.get, data: false },
  post: { do: axios.post, data: true },
  put: { do: axios.put, data: true },
  delete: { do: axios.delete, data: false },
};

/**
 * Make a HTTP request
 * @param {string} type - Type of request to be made (GET,POST,PUT,DELETE)
 * @param {string} url - URL to request
 * @param {Object} data - Data to send in the body of the request
 * @param {Object} options - Additional info to send in the request (ex: headers, timeout, etc)
 * @param {Boolean} logs - Should it print logs?
 */
async function httpReq(type, url, { data = {}, options = {}, logs = false, logBad = true } = {}) {
  //If it has the API GATEWAY url then attach the API GATEWAY token
  addOaasToken(url, options);

  type = type.toLowerCase(); //To ensure it always checks correctly

  //Get the request type, the requst type might be wrong or undefined so check too
  const request = requestTypes[type];
  if (!request) {
    const msg = `Invalid request type (${type})`;
    if (logBad) httpLog(type, url, EXCEPTION_STATUS, msg);
    return ECONNREFUSED_RESPONSE(msg);
  }

  try {
    //Do the request, and pass the data and options corresponding to the request type
    const res = await request.do(url, request.data ? data : options, options);
    if (logs) httpLog(type, url, res.status, res.data);

    addSuccessful(res, logBad, url, type);
    return (
      res ||
      ECONNREFUSED_RESPONSE(
        "Request made but didn't receive any response (THIS CODE IS UNREACHABLE)"
      )
    );
  } catch (err) {
    const { response: res } = err;

    //If res in defined it means that the request failed with some status code and response,
    //otherwise it means there's been an issue reaching the url, and no request has been made
    if (logs) httpLog(type, url, res ? res.status : EXCEPTION_STATUS, res ? res.data : err.message);

    addSuccessful(res, logBad, url, type, err.message);
    return res || ECONNREFUSED_RESPONSE(`Could not reach the URL ( ${url} )`);
  }
}

function addOaasToken(url, options) {
  if (url && API_GATEWAY && url.includes(API_GATEWAY))
    options.headers = { ...(options.headers || {}), ...OAAS_TOKEN_HEADER };
}

function addSuccessful(res, logBad, url, type, optRes) {
  //If res doesn't exist it will be handled outside of this
  if (!res) {
    if (logBad) httpLog(type, url, EXCEPTION_STATUS, optRes || "There's no response");
    return;
  }

  //Log if the response is not 200 and logging is set to true
  if (res.status != 200 && logBad) httpLog(type, url, res.status, res.data);

  //If it exists and has data but no successful then continue
  if (res.data && res.data.successful !== undefined) return;

  //Gotta trust that the API will respond with a correct code
  //Otherwise, why are we using these useless APIs? ðŸ˜Ž
  res.data = { data: res.data || "", successful: res.status === 200 };
}

module.exports = { httpReq };
